generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model address {
  id         String  @id @default(uuid())
  address1   String? @db.VarChar(200)
  address2   String? @db.VarChar(200)
  address3   String? @db.VarChar(200)
  city       String? @db.VarChar(200)
  country    String? @db.VarChar(200)
  postalCode String? @map("postal_code") @db.VarChar(20)
  state      String? @db.VarChar(200)

  // Relation's fields
  personalInfoId String @map("personal_info_id")

  // Relations
  personalInfo personalInfo @relation(fields: [personalInfoId], references: [id]) // One-to-many

  @@map("Addresses")
}

model credential {
  id       String @id @default(uuid())
  login    String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  role     String @db.VarChar(255) @default("student")

  // Relation's fields
  userId String @unique @map("user_id")

  // Relations
  user user @relation(fields: [userId], references: [id]) // One-to-one

  @@map("Credentials")
}

model personalInfo {
  id          String   @id @default(uuid())
  dateOfBirth DateTime @map("date_of_birth")
  email       String   @unique @db.VarChar(255)
  firstname   String   @map("first_name")
  lastname    String   @map("last_name")
  middlename  String?  @map("middle_name")

  // Relation's fields
  address address[]
  userId  String    @map("user_id")

  // Relations
  user user @relation(fields: [userId], references: [id]) // One-to-one

  @@map("PersonalInfo")
}

model plan {
  id        String @id @default(uuid())
  monday    Json
  tuesday   Json
  wednesday Json
  thursday  Json
  friday    Json

  // Relation's fields
  groupId String @unique @map("group_id")

  // Relations
  group group @relation(fields: [groupId], references: [id])
}

model student {
  id String @id @default(uuid())

  // Relation's fields
  userId   String     @map("user_id")
  group    group[]
  homework homework[]
  mark     mark[]

  // Relations
  user user @relation(fields: [userId], references: [id]) // One-to-one

  @@map("Students")
}

model teacher {
  id String @id @default(uuid())

  // Relation's fields
  userId   String     @map("user_id")
  homework homework[]
  mark     mark[]

  // Relations
  user user @relation(fields: [userId], references: [id]) // One-to-one

  @@map("Teachers")
}

model user {
  id String @id @default(uuid())

  // Relation's fields
  credential   credential?
  personalInfo personalInfo?
  student      student?
  teacher      teacher?

  @@map("Users")
}

model group {
  id     String @id @default(uuid())
  symbol String @db.VarChar(255)

  // Relation's fields
  student student[]
  plan    plan?

  @@map("Groups")
}

model subject {
  id   String @id @default(uuid())
  name String @db.VarChar(255)

  // Relation's fields
  mark mark[]


  @@map("Subjects")
}

model mark {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now()) @map("created_at")
  description String   @db.VarChar(255)
  mark        String   @db.VarChar(255)
  weight      Int

  // Relation's fields
  studentId String @map("student_id")
  teacherId String @map("teacher_id")
  subjectId String @map("subject_id")

  // Relations
  student student @relation(fields: [studentId], references: [id]) // One-to-many
  teacher teacher @relation(fields: [teacherId], references: [id]) // One-to-many
  subject subject @relation(fields: [subjectId], references: [id]) // One-to-many

  @@map("Marks")
}

model homework {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now()) @map("created_at")
  deadline    DateTime
  description String   @db.VarChar(255)

  // Relation's fields
  studentId String @map("student_id")
  teacherId String @map("teacher_id")

  // Relations
  student student @relation(fields: [studentId], references: [id]) // One-to-many
  teacher teacher @relation(fields: [teacherId], references: [id]) // One-to-many

  @@map("Homeworks")
}

model room {
  id     String @id @default(uuid())
  number String @db.VarChar(10)
  type   String @db.VarChar(255)

  @@map("Rooms")
}

model hour {
  id   String @id @default(uuid())
  from String @db.VarChar(255)
  to   String @db.VarChar(255)
  no Int @default(0) @map("number_of")
  
  @@map("Hours")
}
